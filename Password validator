using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Text.RegularExpressions;

namespace Password_validator
{
    class Program
    {
        static void Greeting()
        {
            Console.WriteLine("Hi, User! Please insert your password! " +
                "\r\n A valid password rules: " +
                "\r\n \t -Min lenght is 5; " +
                "\r\n \t -Max lenght is 10; " +
                "\r\n \t -Should contacin at list 3 letters; " +
                "\r\n \t -Should contain at least one number; " +
                "\r\n \t -Should contain at least one special character(&,@,$,#,% etc); " +
                "\r\n \t -Should not contain space");
        }
        static void MaxLenght(ref int PLenght, ref string ErrorM)
        {
            int MaxL = 10;
            ErrorM = (PLenght < MaxL) ? ErrorM + "" : ErrorM + "Your password should be shorter than " + MaxL + " symbols \r\n";
        }
        static void MinLenght(ref int PLenght, ref string ErrorM)
        {
            int MinL = 5;
            ErrorM = (PLenght > MinL) ? ErrorM + "" : ErrorM + "Your password should be more than " + MinL + " symbols \r\n";
        }
        static void Space(ref string Password, ref string ErrorM)
        {
            ErrorM = (!(Password.Contains (" "))) ? ErrorM + "" : ErrorM + "Your password contains space \r\n";
        }
        static void Numbers (ref string Password, ref string ErrorM)
        {
            Regex numb = new Regex(@"[0-9]");
            ErrorM = (numb.IsMatch(Password)) ? ErrorM + "" : ErrorM + "Your password should contain number \r\n";
        }
        static void SpCharacters (ref string Password, ref string ErrorM)
         {
        Regex Character = new Regex(@"\W");
        ErrorM = (Character.IsMatch(Password)) ? ErrorM + "" : ErrorM + "Your password should contain special characters \r\n";
        }
        static void ThreeLetters(ref string Password, ref string ErrorM)
        {
            Regex Letters = new Regex("[a-zA-Z]{3}");
            ErrorM = (Letters.IsMatch(Password)) ? ErrorM + "" : ErrorM + "Your password should contain at least 3 letters \r\n";
        }
        static void Main(string[] args)
        {
            Greeting();
            string ErrorM = "";
            do
            {
                ErrorM = "";
                Console.Write("New Password:");
                string Password = Console.ReadLine();
                int PLenght = Password.Length;
                MaxLenght(ref PLenght, ref ErrorM);
                MinLenght(ref PLenght, ref ErrorM);
                Space(ref Password, ref ErrorM);
                Numbers(ref Password, ref ErrorM);
                SpCharacters(ref Password, ref ErrorM);
                ThreeLetters(ref Password, ref ErrorM);
                if (ErrorM == "")
                { 
                    Console.WriteLine("Accepted");
                }
                else
                { Console.WriteLine(ErrorM); }
            }
            while (ErrorM != "");
            }
    }
}
